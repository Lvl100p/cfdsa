---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cs-cm
  namespace: cs
  labels:
    app: codeserver
    name: cs-cm
data:
  PUID: "1000"
  PGID: "1000"
  TZ: Asia/Singapore
  DEFAULT_WORKSPACE: /config/workspace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cs-deploy
  namespace: cs
  labels:
    app: codeserver
    name: cs-deploy
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: codeserver
      name: cs-po
  template:
    metadata:
      name: cs-po
      labels:
        app: codeserver
        name: cs-po
    spec:
      volumes:
      - name: cs-vol
        persistentVolumeClaim:
          claimName: cs-pvc
      containers:
      - name: cs-container
        image: linuxserver/code-server:amd64-latest
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: cs-cm
        ports:
        - containerPort: 8443
        volumeMounts:
        - name: cs-vol
          mountPath: /config/workspace
---
apiVersion: v1
kind: Service
metadata:
  name: cs-svc
  namespace: cs
  labels:
    name: cs-svc
spec:
  type: ClusterIP
  selector:
    name: cs-po
    app: codeserver
  ports:
  - port: 80
    targetPort: 8443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cs-ing
  namespace: cs
  labels:
    app: codeserver
    name: cs-ing
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
spec:
  ingressClassName: nginx
  rules:
  - host: cs-167.99.29.64.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cs-svc
            port:
              number: 80
---