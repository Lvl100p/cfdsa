---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bggapp-cm
  namespace: myns
data:
  BGG_DB_USER: root
  BGG_DB_HOST: bggdb-svc.myns.svc.cluster.local
---
apiVersion: v1
kind: Secret
metadata:
  name: bggapp-secret
  namespace: myns
data:
  BGG_DB_PASSWORD: Y2hhbmdlaXQ=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bggapp-deploy
  namespace: myns
  labels:
    name: bggapp-deploy
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      name: bggapp-po
  template:
    metadata:
      name: bggapp-po
      labels:
        name: bggapp-po
    spec:
      containers:
      - name: bggapp-container
        image: stackupiss/bgg-backend:v2
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: bggapp-cm
        - secretRef:
            name: bggapp-secret
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: bggapp-svc
  namespace: myns
  labels:
    name: bggapp-svc
spec:
  type: LoadBalancer
  selector:
    name: bggapp-po
  ports:
  - port: 80
    targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bggapp-ing
  namespace: myns
  labels:
    name: bggapp-ing
spec:
  ingressClassName: nginx
  rules:
  - host: bggapp-167.99.29.64.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bggapp-svc
            port:
              number: 3000